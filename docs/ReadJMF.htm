<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<style type="text/css">
<!--
  
   H2 {font-family: Arial;
      font-weight: 700;
      font-size: 12pt;}

   H3 {font-family: Tahoma;
      font-weight: 700;
      font-size: 10pt;
      color: black;
     }
   H4 {font-family: "Courier New", Courier, mono;
      font-weight: 100;
      font-size: 9pt;
      color: black;
     }
   H5 {font-family: Arial;
      font-weight: 500;
      font-size: 10pt;
      color: black;
     }
     
--></Style>
</head>

<body>
<h2>How to read the JMF message and create the appropriate responses and acknowledges</h2>
<h5>
<p>(see Example 9, based on Example 8)</p>
<br>
<p><strong>Step 1</strong><br>
  The input message you get as a WString, so first of all you have to parse the message into a document<br>
parser-&gt;StringParse(inputMessage,false);</p>
<h5><br><strong>Step 2</strong><br>
  Set up the root process:
</h5><h4>ExampleDoc inMessageDoc(parser-&gt;GetRoot());</h4><h5>
Then get the input document root element and the output document root element:</h5>
  <h4>JDFJMF jmfIn=inMessageDoc.GetRoot();<br>
  JDFJMF jmfOut=GetRoot();</h4>
<h5><br><strong>Step 3</strong><br>
  Get all queries from input document as a vector of elements 
</h5><h4>vElement vMessages=jmfIn.GetMessageVector(JDFMessage::Family_Query);</h4>
<h5>For every query JDFQuery query=vMessages[i] append a response to the output document and set to the response the appropriate query information.</h5>
<p>JDFResponse response=jmfOut.AppendResponse(JDFMessage::Type_Unknown);<br>
  response.SetQuery(query);</p>
<h5><br><strong>Step 4</strong> <br>
  Define query type </h5>
<h4>WString typ=query.GetType();</h4>
<h5>According to the query type define descriptive elements of response (for details see JDF Specification (Release 1.2) chapter 5.5 &ldquo;Standard Messages&rdquo; and chapter 5.6 &ldquo;Queue Support&rdquo;) <br>
  E.g. for query type typ==&quot;KnownDevices&quot; (See Table 5-22: Contents of the KnownDevices message) matching response descriptive element is DeviceList.</p>
<br><br><br>
<p><strong>Step 5</strong> <br>
  Fill in the response - set attributes and elements of all appropriate descriptive elements and of their subelements. To modify the response use the data of the query.</p>
<h4>JDFDeviceFilter deviceFilter=query.GetDeviceFilter();<br>
  JDFDevice deviceIn=deviceFilter.GetDevice();<br>
  <br>
  JDFDeviceList deviceListOut=response.AppendDeviceList();<br>
  JDFDeviceInfo deviceInfo=deviceListOut.AppendDeviceInfo();<br>
  JDFDevice deviceOut=deviceInfo.AppendDevice();<br>
  deviceOut.SetDeviceID(deviceIn.GetDeviceID());<br>
  deviceOut.SetDeviceType(&quot;Coffee Machine&quot;);<br>
  JDFCostCenter cs=deviceOut.AppendCostCenter();<br>
  cs.SetCostCenterID(&quot;1234&quot;);<br>
  cs.SetName(&quot;Java Bean Cost Center&quot;);</h4>
<h5><strong>Step 6</strong> <br>
  Serialize this document to a WString </h5>
<h4>WString outString;<br>
  Write2String(outString);<br>
  cout&lt;&lt; outString;<br>
</h4>
</h5>
</body>
</html>
