Installation procedure for the CIP4 JDF Open Source Library
				     Version Date: 9.1.2002


0.	Requirements:

	 - Microsoft Visual C++ V6.0
	 - Perl Interpreter e.g. http://downloads.activestate.com/
	   ActivePerl/Windows/5.6/ActivePerl-5.6.1.630-MSWin32-x86.msi
	 - 1-2 GB free space on disk
	 - recommendation: fast processor, a lot of memory, if you want
	   to build the project files in an acceptable lapse of time

1.	Unpack JDFOpenSrc the downloaded JDF open source zip file to
	your prefered root directory, e.g.:

	JDFLibSrc
		Build
		docs	
			jdf	
			JDFWrapper
		doxygen
		External
			libpng
			openssl
			xerces
			zlib
		Projects
		src
		tests
	

2. 	Install external packages (LibPng, Zlib, OpenSSL, Xerces)


2.a 	LibPng und ZLib

2.a.1 	Download and extract LibPng


	JDFTools uses PNG Library version 1.0.9 (lpng109.zip)
	The latest version of libpng can be found at the PNG home page
	http://www.libpng.org/pub/png and at ftp://ftp.uu.net/graphics/png

	extract Lpngxxx.zip to .\external\LipPng
	if neccesary, rename the directory in .\external\libpng

2.a.2 	Download and extract Zlib.zip

	JDFTools uses  ZLIB version 1.13 (zlib113.zip)
	zlib should be available at the same place that libpng is.
	If not, it should be at ftp.uu.net in /graphics/png.
	Eventually, it will be at ftp.uu.net in /pub/archiving/zip/zlib

	extract Zlib.zip to .\external\Zlib
	if neccesary, rename the directory in .\external\Zlib
	
2.a.3	Create DLLs

2.a.3.1		open Workspace "external\libpng\projects\msvc\libpng.dsw"

2.a.3.2 	select "libpng Win32 DLL" configuration
        	(Menu -> Build -> select active configuration)

2.a.3.4		Menu -> Build -> Clean
        	( Ignore error messages ... Could not find the file ... )

2.a.3.5		open "Files -> zlib files -> Header Files" in workspace window 
		and select properties of zlib.h:
        	( "persist as" should be "..\..\..\zlib\zlib.h" )

2.a.3.6		select "Menu -> Build -> Rebuild all"
		(creates: zlib.lib, zlib.dll and libpng3.lib, libpng.dll)

2.a.3.7 	repeat Step 2.a.3 for all available configurations (see 2.a.3.2)


2.b.	OPENSSL

	JDFTools uses OpenSSL 0.9.6 [engine] 24 Sep 2000
	The sources can be found at 
	http://www.openssl.org/source/openssl-0.9.6.tar.gz

	To build:
	1) perl Configure VC-WIN32
	   # creates Makefile.ssl, crypto/opensslconf.h
	2) ms\do_ms
	   # creates MINFO, ms\w31dll.mak, ms\nt.mak, ms\ntdll.mak, ms\libeay16.def
	   # ms\libeay32.def, ms\ssleay16.def, ms\ssleay32.def
	3) nmake -f ms\ntdll.mak


2.c.	XERCES

	JDFTools uses Xerces -C++ V1.6
	It can be found at http://xml.apache.org/xerces-c/index.html

	Note that this installation assumes a Xerces Source distribution:
	http://xml.apache.org/dist/xerces-c/stable/xerces-c-src1_6_0.zip


3.	Create documentation
	./doxygen contains doxygen scripts that generate a lot of html documentation. 
	simply run:
	doxygen jdf.dox
	doxygen jdfwrapper.dox
	doxygen jdfwrappercore.dox
	doxygen jdfwrapperexamples.dox

	You need a running version of doxygen but no doxygen source.
	doxygen is available at www.doxygen.org

4.
	compile the sources.
	Using ms vc6 load the workspaces:
	For the libraries:
	./Projects/Win32/Vc6/JDFTools.dsw (only JDFToolsLib)
	./Projects/Win32/Vc6/JDFWrapper.dsw (all sub projects)

	For the wrapper test apps:
	./Projects/Win32/Vc6/TestWrapper.dsw

	These test apps can be modified for whatever purposes you see as useful.

5.	Run the test suite
	you will need to copy the following test file to the build directory and run it.
	./tests/tests/TestWrapper/JDFTest.bat

	The Xerces DLL is needed somewhere in the search path (xerces-c_1_6_0.dll and for 
	debug purpose xerces-c_1_6_0D.dll).

	If these instructions are incomplete or misleading, please send a mail to:
	rainer.prosi@de.heidelberg.com